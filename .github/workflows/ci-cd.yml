name: CI-CD

on:
  pull_request:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # owner/repo

concurrency:
  group: "deploy-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  # ------- CI -------
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (clean)
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test --if-present

      - name: Build (optional)
        run: npm run build --if-present

  # ------- Build & Push Docker image (เฉพาะ push) -------
  docker:
    if: github.event_name == 'push'
    needs: ci
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write     # push ไป GHCR
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch         # :main, :feature-x
            type=sha                      # :sha-xxxxxxxx
            type=semver,pattern={{version}}  # :v1.2.3 (ตอน push tag)

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # ------- Deploy (Docker Compose ผ่าน SSH, เฉพาะ main) -------
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH (docker compose)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script_stop: true
          script: |
            set -e
            # โฟลเดอร์แอปบนเซิร์ฟเวอร์ (ต้องมี docker-compose.prod.yml + .env)
            cd /opt/myapp

            # login GHCR ด้วย GitHub Token
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

            # ดึง image ล่าสุดตาม tag ของ branch main (ใช้ :main หรือ :sha-xxx ก็ได้)
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d

            # เก็บบ้านให้สะอาด
            docker system prune -f
